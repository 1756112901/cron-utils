{"name":"Cron-utils","tagline":"Cron utils for parsing, validations and human readable descriptions.","body":"cron-utils\r\n===========\r\nA Java library to parse, validate, migrate crons as well as get human readable descriptions for them. The project follows the [Semantic Versioning Convention](http://semver.org/) and uses Apache 2.0 license\r\n\r\n[![Build Status](https://travis-ci.org/jmrozanec/cron-utils.png?branch=master)](https://travis-ci.org/jmrozanec/cron-utils)\r\n[![Coverage Status](https://coveralls.io/repos/jmrozanec/cron-utils/badge.png)](https://coveralls.io/r/jmrozanec/cron-utils)\r\n\r\n[![Project stats by OpenHub](https://www.openhub.net/p/cron-utils/widgets/project_thin_badge.gif)](https://www.openhub.net/p/cron-utils/)\r\n\r\n**Download**\r\n\r\ncron-utils is available on Maven central repository.\r\n\r\n    <dependency>\r\n        <groupId>com.cronutils</groupId>\r\n        <artifactId>cron-utils</artifactId>\r\n        <version>1.0.0</version>\r\n    </dependency>\r\n\r\n\r\n**Features**\r\n\r\n * Create arbitrary cron expressions: you can define your own cron format! Supported fields are: second, minute, hour, day of month, month, day of week, year.\r\n * You can flag last field as optional!\r\n * Supports all cron special characters: * / , -\r\n    * Non-standard characters L, W, # are supported as well!\r\n    * Question mark (?) is currently replaced for an asterisk (*). Enhanced support will be provided in a future.\r\n * Print to locale specific human readable format (English, Dutch, French, Italian, Portuguese and Spanish so far...).\r\n * Parse and Description process are decoupled: parse once and operate with the result!\r\n * Validate if cron string expressions match a cron definition using CronValidator\r\n * Convert crons between different cron definitions: if you need to migrate expressions, CronMapper may help you!\r\n * Pre-defined definitions for the following cron libraries are provided:\r\n    * [Unix](http://www.unix.com/man-page/linux/5/crontab/)\r\n    * [Cron4j](http://www.sauronsoftware.it/projects/cron4j/)\r\n    * [Quartz](http://quartz-scheduler.org/)\r\n\r\n**Quick example**\r\n\r\n    //get a predefined instance\r\n    CronDefinition cronDefinition = \r\n            CronDefinitionRegistry.instance().retrieve(QUARTZ);\r\n\r\n    //create a parser based on provided definition\r\n    CronParser parser = new CronParser(cronDefinition);\r\n    Cron quartzCron = parser.parse(\"0 23 ? * * 1-5 *\");\r\n\r\n    //create a descriptor for a specific Locale\r\n    CronDescriptor descriptor = CronDescriptor.instance(Locale.UK);\r\n\r\n    //parse some expression and ask descriptor for description\r\n    String description = descriptor.describe(parser.parse(\"*/45 * * * * *\"));\r\n    //description will be: \"every 45 seconds\"\r\n\r\n    //Validate if a string expression matches a cron definition:\r\n    CronValidator quartzValidator = new CronValidator(cronDefinition);\r\n\r\n    //getting a boolean result:\r\n    quartzValidator.isValid(\"0 23 ? * * MON-FRI *\");\r\n\r\n    //or returning same string if valid and raising an exception if invalid\r\n    quartzValidator.validate(\"0 23 ? * * MON-FRI *\");\r\n\r\nFor more examples, check our [README](https://github.com/jmrozanec/cron-utils)\r\n\r\nFor stats about the project, you can visit our [OpenHUB profile](https://www.openhub.net/p/cron-utils)","google":"UA-54023800-1","note":"Don't delete this file! It's used internally to help with page regeneration."}